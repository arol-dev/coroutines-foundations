/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import kotlin.coroutines.EmptyCoroutineContext

data class User(val username: String, val friends: List<User> = emptyList())

class App {
    suspend fun doLogin(username: String, password: String): User {
        // Server request
        return User(username)
    }

    suspend fun requestCurrentFriends(user: User): List<User> {
        // Server request
        return listOf(User("1"), User("2"))
    }

    suspend fun requestSuggestedFriends(user: User): List<User> {
        // Server request
        return listOf(User("3"), User("4"))
    }
}

fun main() {
    val app = App()

    CoroutineScope(EmptyCoroutineContext).launch {
        val user = app.doLogin("username", "password")
        val friends = app.requestCurrentFriends(user)
        val suggestedFriends = app.requestSuggestedFriends(user)
        val userWithFriendsAndSuggestedFriends =
            user.copy(friends = friends + suggestedFriends)
        println(userWithFriendsAndSuggestedFriends)
    }
}
